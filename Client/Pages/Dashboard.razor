@page "/dashboard"
@using Microsoft.AspNetCore.SignalR.Client
@using Microsoft.Extensions.Logging

@inject NavigationManager NavigationManager
@inject ILoggerProvider loggingprovider;
@inject ILoggerFactory LoggerFactory

@implements IDisposable

<h1>Dashboard</h1>

<hr>


<ul id="messagesList">
    @foreach (var message in messages)
    {
        <li>@message</li>
    }
</ul>

@code {
    private HubConnection hubConnection;
    private List<string> messages = new List<string>();
    private ILogger<Log> logger;

    protected override async Task OnInitializedAsync()
    {
        logger = LoggerFactory.CreateLogger<Log>();

        hubConnection = new HubConnectionBuilder()
        .WithUrl(NavigationManager.ToAbsoluteUri("/hub/log"))
        .WithAutomaticReconnect()
        .ConfigureLogging(logging =>
        {
            logging.SetMinimumLevel(LogLevel.Trace);
            logging.AddProvider(loggingprovider);
        })
        .Build();

        hubConnection.On<string>("LogEvent", (msg) =>
        {
            var encodedMsg = $"{msg}";
            messages.Add(encodedMsg);
            StateHasChanged();
        }); 

        try
        {
            await hubConnection.StartAsync();
        }
        catch (Exception ex)
        {
            logger.LogInformation(ex.Message);
        }
    }

    public bool IsConnected =>
        hubConnection.State == HubConnectionState.Connected;

    public void Dispose()
    {
        _ = hubConnection.DisposeAsync();
    }

}