<Project Sdk="Microsoft.NET.Sdk.Web">



	<ItemGroup>
		<PackageReference Include="Beffyman.AspNetCore.Server" Version="1.0.2" />
		<PackageReference Include="FluentValidation.AspNetCore" Version="9.3.0" />
		<PackageReference Include="Jint" Version="2.11.58" />
		<PackageReference Include="McMaster.NETCore.Plugins" Version="1.3.1" />
		<PackageReference Include="Microsoft.Extensions.Hosting.WindowsServices" Version="3.1.8" />
		<PackageReference Include="Microsoft.VisualStudio.Azure.Containers.Tools.Targets" Version="1.10.13" />
		<PackageReference Include="NLog.Web.AspNetCore" Version="4.9.3" />
		<PackageReference Include="Npgsql" Version="4.1.4" />
		<PackageReference Include="RabbitMQ.Client" Version="6.2.2" />
		<PackageReference Include="System.Data.SqlClient" Version="4.8.1" />
		<PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.Server" Version="5.0.0" />
		<PackageReference Include="VueCliMiddleware" Version="5.0.0" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\Client\Otm.Client.csproj" />
		<ProjectReference Include="..\Shared\Otm.Shared.csproj" />
	</ItemGroup>

	<ItemGroup>
		<Folder Include="Logs\" />
	</ItemGroup>
	<ItemGroup>
	  <None Update="Plugins\**\*.*">
	    <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
	  </None>
	</ItemGroup>

	<PropertyGroup> 
		<TargetFramework>net5.0</TargetFramework>
		<UserSecretsId>a372e9ee-0ac8-4e44-a6fc-f8a94734c4c7</UserSecretsId>
		<DockerComposeProjectPath>..\docker-compose.dcproj</DockerComposeProjectPath>
		 <BuildServerSideRenderer> false </BuildServerSideRenderer>
		<DockerDefaultTargetOS>Linux</DockerDefaultTargetOS>
	</PropertyGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="Client**" />
		<None Remove="Client**" />
		<None Include="Client**" Exclude="Clientnode_modules\**" />
	</ItemGroup>

	<ItemGroup>
	  <None Remove="Client%2a%2a" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('Clientnode_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
		<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="Client" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="BeforePublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="Client" Command="npm install" />
		<Exec WorkingDirectory="Client" Command="npm run build" />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="Client\dist\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
  	</Target>

</Project>
